<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="SaveWorkBook.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        gg==
</value>
  </data>
  <data name="GetallVersion.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAANUAAADtCAMAAAAft8BxAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAACHUExURf///wAAAPT09Pf39/r6+uPj4ykpKejo6AkJCXNzc/Dw8MbGxqOjo97e3vPz8xwcHEND
        Q4+Pj9PT0y8vL76+vldXV7e3txMTE0lJSZWVldDQ0K2trWxsbHp6etnZ2S4uLmRkZE5OTjY2NoiIiB8f
        Hzw8PIKCgqenp1xcXJKSkhAQEGdnZ5ycnPeQ/DEAAAs+SURBVHhe1Z3ZmqowDIAREARFUBEVVwSXUd//
        +Q6MOY4LaYtCbf6r+QbGIbak2ZpqEjHdS2KdTtZmbpvwK/qs9q3/dNI2/JI60Q5E+iXpwq9pc8hAHsCK
        4AJlViDMH50eXKKLOwJZ7llS1xkXEOQRx4bLNLGPIMcTGw9uIEnXAjGeSVZwB0XmIMQrGWGxDiBDGXQX
        rh5IUMbpYMBd1GCNVcv/ISoW/l4VdByaC1e8BQEQEriPGA48PsaOpA0f+vD4GNMY7iQFb7BauxDupISL
        WRc3rAPcSok2V6zWBW6lBGbh3rHX4V5C2Et4eJwlQdfEHcDD42wIanhzBg+Pk1D0uNimU8GO4sIVlgUw
        HvBJBZ/Mqwk7n8DTo3RUX7j0VRjN54fe5TIbpPtZL2prK/661fqBP1cPL5otF+PAyiYdeNYcfzoL1/Az
        i1RBj6s9O+4y/06Ye3hm7hXHhc9SAd325ht4sM8YqxKlaXej/UOG4COmKqzHZvdy5Gq3Shy/PgnbP0cR
        JVCNAXz4dzCipN5RAtbfixT2V1wv921S+B+ycbvNyZS/WV9RGMZ80cjU+4/1jSk4HzcqU24QSg/QGAdO
        4LIOJEuld59y140geayG/AhEHUh9r+wfCZOvYCxRB0YB/NPGkbdeefyoXl1Im4B9VtKwbmQNlSdHS1wZ
        S7LZwwT+oQwkBQbNSx1r1OIgEI3JGcsRqj2G/1edzmky8f3M2h1/PKEYU6u1lDL9zC78uyp0rN34vJwd
        orA79FwIG8UCUp3k5Hz65dVVDPwkvczD4ctX7qYnuANnNIebm8VNkTAYwm4fdcvfC3sBtzCQVOZpCDzK
        H+O5Z2NBSk/ALjnK0RN9cbNvsruw0oUiL6ekUkiPm8UAsnHKzNIYAoZJNoObGyYWDFxm+4itjd2/wm+U
        QFKWJxSbfqc05gT89TPcyiCRlJHrigX7U1Q/3BCwtsaSct2v9dolWKlAQYHA9FvCrU2zEggiZXsRjzXm
        2pCWrPL2lcDqchaLmHBdmEBW5EXAnh3NxazQ1RT+AENarbTOF0q4lCXiTOWxrFIfk/f1tjJxPcysu5WY
        0zF5aYHTuYIeZloVazkmegHPuskufbhTBNZYBfJimegWCGAbVzJCGYU+EguX2hxLYFPRAce1hcRtPX2O
        QzWr6i14yLfUkVm+yfbn/V51F6i8MnAksxCL7dx13nkUr8z0D2QWzXlsj+o9lRXBX9+xkVn+wl6pKiy9
        j6TwATfkhPz+w1ypdu9/v72HkNlI7g5UpqG+/WTFDDc3uayl3KID82Wm3NH5zAxwo3RqtU7TxY88c+IK
        U/997AOZ3jCOPakv1C8sS0meFVozrPlHVqgVI6SkYi2sEDrD/pMV1qofliMuz2GoGZcxVHS7UYQgQQnf
        KkD8HB0vEKnqJSoEvgBvZboMNYMbgN+tVv6IGER4ZVolnKQYeFRTti1aI/juawfuIAjuAWdkjQpW+pes
        UZuDxozp2n+aZqO7puiaSvkExEp6joSHCt2eTLoZmYvtngroGoAME5Bic4YbmF3hw3WS6CDEC6SHCk0F
        ElaAmoYVTm3k1Oo1BGYtETbWcw2IFBkFKmxEfhtsCa6c/lUKxAnxSU9ArAprQ1oDhshrRTcGWICkTH3K
        7qLWRyoSd2Qj6wUeYgSO4TpNhshrtYfrNMGim6T1OpoJgcs0wZz7AK7TBNuGJKtmvhn6SCqEYj/JP1yQ
        4hnCXatzbJDiGYLNJO9Awks+Lan0VdyNV3/PjFiBCaWakdXFmY6y0dS5/LfykF6ZhE5aMGZ/EYodWETI
        xig6Brv7aMdOf71CZLmS3Ijmfdznep6g0N5IiodKLUL/9fnPLrrfcAh/pTplyi43IBDTgohUpZsaLF1D
        ds4SkaqkTD4nxEpSaRhMRnnt6UYrL7PwaUiF9BFfa+UJYYtGKKZdrhUmGvzwBBGpPCTzq5UXpRKZgUj1
        80QrjzB1iEhV/v5kGtK9goZmH8LTPjHCMnKkpdrRtpgQqRINKSGmYd0iEdoj5onQiNwi4YkF1qOBRqlZ
        uRnYWmK7eAYUPHwTCU+kWKqbRKmFibi8Myx5YFGIMRmIwxFqbfjpGQrxQKz+qo1GpClUkGAj4mp9xGSi
        oAQRFTjqozt5KNQlIPr7qKMbhCkcy4dYe2muv5FhpJBBhSd9pnh5sGy3+h4W1q+ssGGHyBZNSZ38PgAx
        ICaFv7FCPKzN9U8VBrEsfvs6YDtPA9VLzmwk7Lz4rcFHusRkqq9YEVLUcy3sjpAOtKq/WNhrdR2NITKS
        jtoGroGUoP7mr3J7HnmxFN9Pi53uu4Dr2DGKau/nwfrb/N8GjG3UVHqbnI1UC2f/c78u1v1V5SmImUTb
        2+ZmrKtjYSYqCtq15wg34C9WR2GpsC2Lf+sRVsuksOuIeRq5H3wDa4C9g+vqgW3Y2cL1AnS3sKohXHTL
        4n1NDzoFVTXcse3NnfvFCLM+/rS/WmCbQFrLBysPHVEljUF0EJ5WWLS9qK/iYKFdK5KnKCa2s6y1VK8R
        Cbaz5dV5CtG2beqZTWgvGOt5YumYVmkFqhkYJuIP5hr7JTlwQA9CUc0nRl+WkqOxDfQbUCyRgKUM8llV
        oq/xXs8LleYg5rnnlNYKw7VXIL6hBoy+eXDHI/hgyTxikAPj2ILysu4+Zgfn7qMqFgZS5liwQxZWRhd1
        Vcrb33hERld2X40KoCHa4OvFWPqD0cFcibUYX39ZDUZsfLCU6HaGmur5UDGifFjIveD73VYYU+nEXHwY
        38b22z4J69Aq9kxCXf0cqa3vX4kZLxWvwQ2rO/v2m4txmzFS3IyAyzqdZ/Q9D7KPdfcq4B8EG+NLwv8t
        W1/AZp0a5PNfDazm7sqX+pPgjQALRGoZ26yvpbX4hljsEzmnQq97iHrFBYn8LnUuwzjIPWDBFQd1oX9Z
        y9aEbZaiaLV+4DYueEPpAqnH1Gu8453+8lU8mBonX7dk+sYRa52qppW77EG35NmEF/ZIVZs3nFOSO5LC
        73hAHaj49fI+TopRyDT9Cqq6R32mNi3oNV1FrbNs0l+qrzKlJ1Y9sGx2l6DHPY9z+0ZhZpd7WnISNef2
        mxF3sozeWmHQhN4Nf9HUcHkLlpH9y7uZtYj7yQ3tkmFb2Ff8txfNOdMivGJ169YaOu+wyILOBxFKrhYq
        WHbrXLyMLldLFHxUD/cDH8Ikc+ozoSKH+zYXCJu0pRgCMzwn29QjV7QRkqk1+HR29ATerYLtx2re5Biy
        N+porz4X+/parclg+L6jbA8HjAOdHshqSWWEbAP+nnEvfkcj6nGPFdp6ZF1TtLXLMzLvWDu9brWpaHZ7
        jvj3VuNxxEOu9XLPKHHmolPRnjsJ1zK7J6kx5cSOXJWRnUPbMPBRMw3DDs+ir+yNeiN3xp6RLUFZHwfR
        cOV5bdt2Xd3QXde22563GkaDY4VJd+O0r9tZPVR4uR7oWNsgOZ6dfbp3zsck2FqCa8ULQQOdGoeVZ2HN
        bBrJ4up4/lwGaVO+d1fANWmIJtuq2+d3lMbndM6NBoz7c3YAtBmCQ9OJM0/Miq+TgYTmUGYsd7iCuLmY
        zwNzQZehBrYSa43svUBooQasvdwkYLhsXsv7S+klHnrc9KKcvuWrfYrR5qUYPsFpf60m0U0rOUfCjFL5
        2ed77EEiGm8QZZIM5OqIMuwofddJKSNIo+/LVGB6IXaCVlXOoSdpzRVBt3ufr2Drnv0NrcemPRhv313E
        /O148M2KNiZuOFhMq0rmTxeD8Ls6j88qOjiBqGR+4BwiGj1ANdcbxuFsEbDCLp1gMQvjoaf6ID1hGn3X
        jXuDvbMZT3dr/9Q6+evddLxx9oNe7Lp9RrTwMzTtH8MpqAF65lV5AAAAAElFTkSuQmCC
</value>
  </data>
</root>